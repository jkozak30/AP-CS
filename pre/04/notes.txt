4) CONDITIONALS

Relational operators (boolean; can be true or false)
- x == y -> equals
- x != y -> doesn't equal
- x > y -> greater than
- x < y -> less than
- x >= y -> greater than or equal
- x <= y -> less than or equal
* two sides must be compatible (ex 4 > "5" is invalid)
* only == and != work with strings 

Logical operators (boolean)
- && -> and
- || -> or
- ! -> not
  - (true || [anything]) is always true, can short circuit
- De Morgan's laws:
  - !(A && B) <-> !A || !B
  - !(A || B) <-> !A && !B

Conditional statements
- if statement (examples)

    if (x > 0) {
      System.out.println("x is positive");
    }
--------------------
    if (x > 0) {
        System.out.println("x is positive");
      } else if (x < 0) {
        System.out.println("x is negative");
      } else {
        System.out.println("x is zero");
    } //chaining, nesting
    
Flag variables
- variable type: boolean
- can be set to true/false, or have a condition:
  - (ex) boolean evenFlag = (n % 2 == 0);

- Return: use to terminate method before you reach the end

ex. if (x <= 0.0) {
      System.err.println("Error: x must be positive.");
      return;
    } //validates input

Recursion
- method calls back on itself (ex. countdown to 0)
- need a base case/ count up/down, or StackOverflowError
- useful for repeated division when converting from base 10
