Julia Kozak
APCS pd08
cobo lab 010_review
2022-02-11

ACTIVITY 1
1a. public static double sentimentVal(String word){}
1b. The method requires a String parameter. If you try to pass a different parameter, the program won't compile because it is required by the method.
1c. The method returns a double.

2. sentimentVal("hi") //1.25
   sentimentVal("great") //1.48
   sentimentVal("yes") //0.92

3a. It will compile, because sentimentVal will return a double that can be assigned as the value of a double variable.
3b. It will not compile, because sentimentVal will return a double, and this cannot be assigned to a String. Also, the method sentimentVal cannot take a double parameter
3c. It will not compile, because sentimentVal takes one parameter.

ACTIVITY 2
4. totalSentiment works by taking an input that is a file name with the review. It uses split to create an array of the words in the file, each as separate Strings. Then, it iterates through each item of the array to remove punctuation, and add the sentimentVal of the String to a total sum. The total sum is returned as the totalSentiment.
5a. The ratings make sense, except a longer rating that expresses a moderate opinion might get a better rating than a short, positive rating because totalSentiment just adds all sentiments.
5b. We can improve this by averaging the sentiments of all the words rather than adding them, that way it is clearer that overall, a sentiment is negative or positive.
6. His logical error is that for all (else if) cases after the first, their condition is already included in (totalSentiment < 15). So, either the totalSentiment is <15 and 4 is returned, or it is >= 15 and 0 is returned. This can be fixed by starting from the case of (totalSentiment < 0), then going upwards from that (next (totalSentiment < 5), etc.).

ACTIVITY 3
3. for a String, indexOf will return the index of the given character/substring within the String. substring can be used to return a part of a given String, from a startIndex and endIndex. These can be used to divide a String at a given space, since indexOf can find the first instance in which there is a space. Then, substring can be used to set a new String to everything before the space, then everything after but not including the space (you don't include the space, which is why you must add 1).
5. Static methods don't require an instance to be called. For instance, they can take an input, and use only other static elements (methods, vars). A non-static method is something specific to an instance (called by an instance) and may use instance variables within it.
6. The current state of fakeReview uses only random adjectives. If the method were to create reviews that are either positive or negative, it could instead select a random positive or random negative adjective, respectively. We could also modify the csv file to include the part of speech, in which case we could also have the method replace all negative-valued words with positive ones of the same part of speech (ex. "disliked" still remains negative since it isn't an adjective).

ACTIVITY 4
1. Autogenerated negative reviews might be needed in order to balance positive reviews, so a product has a relatively reasonable star rating with a lot of reviews (if it's still overall positive, people might buy the product because of popularity).
2. Autogenerated positive reviews might be used to falsely boost the reputation of a product, which companies might use to encourage people to buy their product.
3. The method would need to check the sentimentVal of each adjective within its template review. If it sees that the adjective is positive/neutral and it wants a positive review, it'll remove the star from the front of it. Otherwise, it will change the remaining negative adjectives to positive ones from positiveAdjectives.txt. For the negative review case, it'll do the same, except it will replace positive or neutral adjectives with negative ones.
5. It will return the String oneWord, but with its first character removed.
6. You must remove the "*" because the sentimentVal method directly compares the imput String to the elements of cleanSentiment, which does not include punctuation, so it'll always return neutral if there is any punctuation.
7. The method could increase the threshold for changing an adjective (ex. it now checks if a given adjective has sentimentVal > 0.5). Then, it'll replace all adjectives with lower sentimentVal with one of the super positive adjectives in positiveAdjectives.txt.
